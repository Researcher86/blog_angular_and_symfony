version: '3'

services:
  web_server:
    image: nginx:1.15
    ports:
      - 8080:80
    volumes:
      - ./z_config/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/app/frontend/dist
      - ./backend/public/bundles:/app/backend/bundles
    depends_on:
      - frontend
      - backend
  backend:
    build:
      context: .
      dockerfile: z_config/backend/Dockerfile.fpm
    environment:
      - XDEBUG_CONFIG=client_host=${WIN_HOST} start_with_request=trigger
      - XDEBUG_MODE=debug
      - XDEBUG_SESSION=PHPSTORM
      - PHP_IDE_CONFIG=serverName=php-fpm
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - es
      - rabbit_mq
      - redis
      - centrifugo
  php_cli:
    build:
      context: .
      dockerfile: z_config/backend/Dockerfile.cli
    volumes:
      - ./backend:/app
#    restart: always
#    tty: true
    depends_on:
      - db
      - es
      - rabbit_mq
      - redis
      - centrifugo
      - mailer
  worker_indexer:
    build:
      context: .
      dockerfile: z_config/backend/Dockerfile.worker
    environment:
      - XDEBUG_CONFIG=client_host=${WIN_HOST}
      - XDEBUG_MODE=debug
      - XDEBUG_SESSION=PHPSTORM
      - PHP_IDE_CONFIG=serverName=worker-indexer
    volumes:
      - ./backend:/app
    restart: always
#    scale: 1
    command: bash -c "\
      wait-for-it db:5432 -s -t 60 && \
      wait-for-it redis:6379 -s -t 60 && \
      wait-for-it rabbit_mq:5672 -s -t 60 && \
      wait-for-it es:9200 -s -t 60 && \
      wait-for-it centrifugo:8000 -s -t 60 && \
      php bin/console messenger:consume async_es -vv"
    depends_on:
      - db
      - es
      - rabbit_mq
      - redis
      - centrifugo
  worker_email:
    build:
      context: .
      dockerfile: z_config/backend/Dockerfile.worker
    environment:
      - XDEBUG_CONFIG=client_host=${WIN_HOST}
      - XDEBUG_MODE=debug
      - XDEBUG_SESSION=PHPSTORM
      - PHP_IDE_CONFIG=serverName=worker-email
    volumes:
      - ./backend:/app
    restart: always
#    scale: 2
    command: bash -c "\
      wait-for-it db:5432 -s -t 60 && \
      wait-for-it redis:6379 -s -t 60 && \
      wait-for-it rabbit_mq:5672 -s -t 60 && \
      wait-for-it mailer:8025 -s -t 60 && \
      wait-for-it centrifugo:8000 -s -t 60 && \
      php bin/console messenger:consume async_email -vv"
    depends_on:
      - db
      - rabbit_mq
      - redis
      - centrifugo
      - mailer
  worker_telegram:
    build:
      context: .
      dockerfile: z_config/backend/Dockerfile.worker
    environment:
      - XDEBUG_CONFIG=client_host=${WIN_HOST}
      - XDEBUG_MODE=debug
      - XDEBUG_SESSION=PHPSTORM
      - PHP_IDE_CONFIG=serverName=worker-telegram
    volumes:
      - ./backend:/app
    restart: always
#    scale: 1
    command: bash -c "\
      wait-for-it db:5432 -s -t 60 && \
      wait-for-it redis:6379 -s -t 60 && \
      wait-for-it rabbit_mq:5672 -s -t 60 && \
      wait-for-it centrifugo:8000 -s -t 60 && \
      php bin/console messenger:consume async_telegram -vv"
    depends_on:
      - db
      - rabbit_mq
      - redis
      - centrifugo
  frontend:
    build:
      context: .
      dockerfile: z_config/frontend/Dockerfile
    command: ng serve --host frontend --public-host http://dev.blog.kz:8080 --disableHostCheck true
    restart: always
    tty: true
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
      - centrifugo
  db:
    image: postgres:13
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_DB: blog
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
  redis:
    image: redis:6.0
    ports:
      - "6379:6379"
  redisinsight:
    image: redislabs/redisinsight:latest
    ports:
      - "8001:8001"
    depends_on:
      - redis
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms128m -Xmx128m"
    volumes:
      - es_data:/usr/share/elasticsearch/data
  rabbit_mq:
    image: rabbitmq:3.8.9-management
    ports:
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:15672"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
  mailer:
    image: mailhog/mailhog
    ports:
      - "8082:8025"
  centrifugo:
    image: centrifugo/centrifugo:v2.8
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    environment:
      CENTRIFUGO_SECRET: secret
      CENTRIFUGO_API_KEY: secret
    volumes:
      - ./z_config/centrifugo:/centrifugo
    ports:
      - "8083:8000"
    command: centrifugo --admin --admin_insecure
volumes:
  db_data:
    driver: local
  es_data:
    driver: local
